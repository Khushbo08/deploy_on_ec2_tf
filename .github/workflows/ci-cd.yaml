name: CI-CD Workflow for Java Code

on:
  push:

jobs:
  # CI job
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to access source code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # Run unit tests using Maven
    - name: Run unit test
      run: mvn test

    # Build and package the project into a JAR file
    - name: Build project and package jar
      run: mvn package  

    # Log in to Docker Hub using secrets
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}
    # Build the Docker image and tag it with the commit SHA
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:${{ github.sha }} .
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:latest

    # Push the Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:latest

  # Job to deploy the Java app 
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to access source code
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
           aws-region: ${{ secrets.AWS_REGION }}
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           
    # Set up kubectl with the specified version
    - uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.1'
      id: install
   
    # Replace the tag in deployment.yaml with the Docker Hub image tag
    - name: Replace the tag in deployment.yaml
      run: sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:latest|${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:latest|" ./manifests/deployment.yaml

    # Configure kubectl for the specified EKS cluster
    - name: Configure kubectl for EKS
      run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

    # Deploy the application to EKS using deployment.yaml and service.yaml
    - name: Deploy to EKS
      run: |
        kubectl apply -f ./manifests/argocd-app.yaml
        kubectl apply -f ./manifests/deployment.yaml 
        kubectl apply -f ./manifests/service.yaml
