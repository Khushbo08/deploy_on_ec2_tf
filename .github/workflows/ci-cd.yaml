name: CI-CD Workflow for Java Code

on:
  push:

jobs:
  # CI job
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to access source code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # Run unit tests using Maven
    - name: Run unit test
      run: mvn test

    # Build and package the project into a JAR file
    - name: Build project and package jar
      run: mvn package  

    # Log in to Docker Hub using secrets
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build the Docker image and tag it with the commit SHA
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:${{ github.sha }} .
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:latest

    # Push the Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/application_img_argocd:latest

  # Job to deploy the Java app on EC2
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to access source code
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
           aws-region: ${{ secrets.AWS_REGION }}
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           
    # Install Terraform
    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y unzip
        curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
        unzip terraform_1.0.0_linux_amd64.zip
        sudo mv terraform /usr/local/bin/

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Apply Terraform to create EC2 and deploy Docker app
    - name: Terraform Apply
      run: terraform apply -auto-approve

    # # Output the EC2 instance public IP for the deployed app
    # - name: Show EC2 Public IP
    #   run: echo "Application deployed at IP: ${{ steps.terraform.outputs.public_ip }}"

